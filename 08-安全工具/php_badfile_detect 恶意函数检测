import re
import time
list_bad_function=['eval', 'assert', 'require', 'require_once',
                    'include_once', 'preg_replace', 'preg_replace', 'create_function',
                    'exec', 'passthru', 'proc_open', 'shell_exec', 'system', 'popen', 'file_get_contents'
                    , 'file_put_contents', 'fopen', 'readfile', 'copy', 'rename', 'rmdir',
                    'move_upload_file', 'move_uploaded_file', 'mysql_query']
#'file' 误报太高。
bad_detail = '''
1，文件包含漏洞（包含任意文件）
require，include, require_once, include_once
2，代码执行(执行任意代码)
eval()
字符串当作代码来执行
assert ()
调试函数，检查第一个断言是否为FALSE。（把传入的字符串作为php代码执行）
preg_replace()（preg_replace( /“xxxx” / e)) 执行正则表达式，实现搜索和替换功能。 / e修正符使preg_replace()
将其中的replacement参数当作PHP代码
create_function()
创建一个匿名函数，并返回都独一无二的函数名。
3，命令执行（执行任意命令漏洞）
exec()
执行一个外部程序
passthru()
执行外部程序并显示原始输出
proc_open()
执行一个命令，并且打开用来输入 / 输出的文件指针
shell_exec()
通过shell环境执行命令，并且将完整的输出以字符串的方式返回
system()
执行外部程序，并且显示输出
popen()
通过popen()
的参数传递一条命令，并且对popen()
所打开的文件进行执行
4，文件系统操作（文件目录读写漏洞）
file_get_contents()
file_put_contents()
fopen()
readfile()
copy()
rename()
rmdir()
file()
move_upload_file()
5，数据库操作（sql注入漏洞）
select
from，mysql_connect()，mysql_query()，mysql_fetch_row()
6，数据库显示（xss漏洞）
print()，print_r()，echo()，sprintf()，die()，var_dump()，var_export()
'''
input_file = input("请输入文件信息并包括路径：")
file_reader = open(input_file, 'r', encoding='utf-8', errors='ignore')
for row in file_reader:
    for key_bad in list_bad_function:
        if re.search(key_bad, row):
            print('恶意函数是：'+key_bad+'，请到原始文件中查看！')
file_reader.close()
input_file_exit = input("\n按任意键退出...")


